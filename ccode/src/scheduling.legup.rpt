//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Wed Dec  9 21:02:08 2015
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 1.000000e+01ns
Start Function: pad
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_pad_BB__1_1 default: LEGUP_0
state: LEGUP_F_pad_BB__1_1
   %indvar1 = phi i64 [ %indvar.next2, %7 ], [ 0, %0 ] (endState: LEGUP_F_pad_BB__1_1)
   %2 = phi i32 [ %8, %7 ], [ 0, %0 ] (endState: LEGUP_F_pad_BB__1_1)
   %exitcond = icmp eq i64 %indvar1, %msgLen (endState: LEGUP_F_pad_BB__1_1)
   br i1 %exitcond, label %9, label %3
   Transition: if (%exitcond): LEGUP_F_pad_BB__9_7 default: LEGUP_F_pad_BB__3_2
state: LEGUP_F_pad_BB__3_2
   %4 = getelementptr inbounds i8* %msg, i32 %2 (endState: LEGUP_F_pad_BB__3_2)
   %5 = load i8* %4, align 1 (endState: LEGUP_F_pad_BB__3_4)
   %6 = getelementptr inbounds i8* %data, i32 %2 (endState: LEGUP_F_pad_BB__3_2)
   Transition: default: LEGUP_F_pad_BB__3_3
state: LEGUP_F_pad_BB__3_3
   Transition: default: LEGUP_F_pad_BB__3_4
state: LEGUP_F_pad_BB__3_4
   store i8 %5, i8* %6, align 1 (endState: LEGUP_F_pad_BB__3_5)
   Transition: default: LEGUP_F_pad_BB__3_5
state: LEGUP_F_pad_BB__3_5
   br label %7
   Transition: default: LEGUP_F_pad_BB__7_6
state: LEGUP_F_pad_BB__7_6
   %8 = add nsw i32 %2, 1 (endState: LEGUP_F_pad_BB__7_6)
   %indvar.next2 = add i64 %indvar1, 1 (endState: LEGUP_F_pad_BB__7_6)
   br label %1
   Transition: default: LEGUP_F_pad_BB__1_1
state: LEGUP_F_pad_BB__9_7
   %10 = trunc i64 %msgLen to i32 (endState: LEGUP_F_pad_BB__9_7)
   %11 = getelementptr inbounds i8* %data, i32 %10 (endState: LEGUP_F_pad_BB__9_7)
   store i8 -128, i8* %11, align 1 (endState: LEGUP_F_pad_BB__9_8)
   %12 = add i32 %10, 1 (endState: LEGUP_F_pad_BB__9_7)
   Transition: default: LEGUP_F_pad_BB__9_8
state: LEGUP_F_pad_BB__9_8
   br label %13
   Transition: default: LEGUP_F_pad_BB__13_9
state: LEGUP_F_pad_BB__13_9
   %indvar = phi i32 [ %indvar.next, %17 ], [ 0, %9 ] (endState: LEGUP_F_pad_BB__13_9)
   %i.1.in = add i32 %10, %indvar (endState: LEGUP_F_pad_BB__13_9)
   %i.1 = add i32 %12, %indvar (endState: LEGUP_F_pad_BB__13_9)
   %14 = and i32 %i.1, 63 (endState: LEGUP_F_pad_BB__13_9)
   %15 = icmp eq i32 %14, 0 (endState: LEGUP_F_pad_BB__13_9)
   br i1 %15, label %18, label %16
   Transition: if (%15): LEGUP_F_pad_BB__18_13 default: LEGUP_F_pad_BB__16_10
state: LEGUP_F_pad_BB__16_10
   %scevgep = getelementptr i8* %data, i32 %i.1 (endState: LEGUP_F_pad_BB__16_10)
   store i8 0, i8* %scevgep, align 1 (endState: LEGUP_F_pad_BB__16_11)
   Transition: default: LEGUP_F_pad_BB__16_11
state: LEGUP_F_pad_BB__16_11
   br label %17
   Transition: default: LEGUP_F_pad_BB__17_12
state: LEGUP_F_pad_BB__17_12
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_pad_BB__17_12)
   br label %13
   Transition: default: LEGUP_F_pad_BB__13_9
state: LEGUP_F_pad_BB__18_13
   %19 = shl i64 %msgLen, 3 (endState: LEGUP_F_pad_BB__18_13)
   %20 = lshr i64 %msgLen, 21 (endState: LEGUP_F_pad_BB__18_13)
   %21 = trunc i64 %20 to i8 (endState: LEGUP_F_pad_BB__18_13)
   %22 = add nsw i32 %i.1.in, -3 (endState: LEGUP_F_pad_BB__18_13)
   %24 = lshr i64 %msgLen, 13 (endState: LEGUP_F_pad_BB__18_13)
   %25 = trunc i64 %24 to i8 (endState: LEGUP_F_pad_BB__18_13)
   %26 = add nsw i32 %i.1.in, -2 (endState: LEGUP_F_pad_BB__18_13)
   %28 = lshr i64 %msgLen, 5 (endState: LEGUP_F_pad_BB__18_13)
   %29 = trunc i64 %28 to i8 (endState: LEGUP_F_pad_BB__18_13)
   %30 = add nsw i32 %i.1.in, -1 (endState: LEGUP_F_pad_BB__18_13)
   %32 = trunc i64 %19 to i8 (endState: LEGUP_F_pad_BB__18_13)
   %33 = getelementptr inbounds i8* %data, i32 %i.1.in (endState: LEGUP_F_pad_BB__18_13)
   %34 = sdiv i32 %i.1.in, 64 (endState: LEGUP_F_pad_BB__18_45)
   Transition: default: LEGUP_F_pad_BB__18_14
state: LEGUP_F_pad_BB__18_14
   %23 = getelementptr inbounds i8* %data, i32 %22 (endState: LEGUP_F_pad_BB__18_14)
   store i8 %21, i8* %23, align 1 (endState: LEGUP_F_pad_BB__18_15)
   %27 = getelementptr inbounds i8* %data, i32 %26 (endState: LEGUP_F_pad_BB__18_14)
   store i8 %25, i8* %27, align 1 (endState: LEGUP_F_pad_BB__18_15)
   %31 = getelementptr inbounds i8* %data, i32 %30 (endState: LEGUP_F_pad_BB__18_14)
   Transition: default: LEGUP_F_pad_BB__18_15
state: LEGUP_F_pad_BB__18_15
   store i8 %29, i8* %31, align 1 (endState: LEGUP_F_pad_BB__18_16)
   store i8 %32, i8* %33, align 1 (endState: LEGUP_F_pad_BB__18_16)
   Transition: default: LEGUP_F_pad_BB__18_16
state: LEGUP_F_pad_BB__18_16
   Transition: default: LEGUP_F_pad_BB__18_17
state: LEGUP_F_pad_BB__18_17
   Transition: default: LEGUP_F_pad_BB__18_18
state: LEGUP_F_pad_BB__18_18
   Transition: default: LEGUP_F_pad_BB__18_19
state: LEGUP_F_pad_BB__18_19
   Transition: default: LEGUP_F_pad_BB__18_20
state: LEGUP_F_pad_BB__18_20
   Transition: default: LEGUP_F_pad_BB__18_21
state: LEGUP_F_pad_BB__18_21
   Transition: default: LEGUP_F_pad_BB__18_22
state: LEGUP_F_pad_BB__18_22
   Transition: default: LEGUP_F_pad_BB__18_23
state: LEGUP_F_pad_BB__18_23
   Transition: default: LEGUP_F_pad_BB__18_24
state: LEGUP_F_pad_BB__18_24
   Transition: default: LEGUP_F_pad_BB__18_25
state: LEGUP_F_pad_BB__18_25
   Transition: default: LEGUP_F_pad_BB__18_26
state: LEGUP_F_pad_BB__18_26
   Transition: default: LEGUP_F_pad_BB__18_27
state: LEGUP_F_pad_BB__18_27
   Transition: default: LEGUP_F_pad_BB__18_28
state: LEGUP_F_pad_BB__18_28
   Transition: default: LEGUP_F_pad_BB__18_29
state: LEGUP_F_pad_BB__18_29
   Transition: default: LEGUP_F_pad_BB__18_30
state: LEGUP_F_pad_BB__18_30
   Transition: default: LEGUP_F_pad_BB__18_31
state: LEGUP_F_pad_BB__18_31
   Transition: default: LEGUP_F_pad_BB__18_32
state: LEGUP_F_pad_BB__18_32
   Transition: default: LEGUP_F_pad_BB__18_33
state: LEGUP_F_pad_BB__18_33
   Transition: default: LEGUP_F_pad_BB__18_34
state: LEGUP_F_pad_BB__18_34
   Transition: default: LEGUP_F_pad_BB__18_35
state: LEGUP_F_pad_BB__18_35
   Transition: default: LEGUP_F_pad_BB__18_36
state: LEGUP_F_pad_BB__18_36
   Transition: default: LEGUP_F_pad_BB__18_37
state: LEGUP_F_pad_BB__18_37
   Transition: default: LEGUP_F_pad_BB__18_38
state: LEGUP_F_pad_BB__18_38
   Transition: default: LEGUP_F_pad_BB__18_39
state: LEGUP_F_pad_BB__18_39
   Transition: default: LEGUP_F_pad_BB__18_40
state: LEGUP_F_pad_BB__18_40
   Transition: default: LEGUP_F_pad_BB__18_41
state: LEGUP_F_pad_BB__18_41
   Transition: default: LEGUP_F_pad_BB__18_42
state: LEGUP_F_pad_BB__18_42
   Transition: default: LEGUP_F_pad_BB__18_43
state: LEGUP_F_pad_BB__18_43
   Transition: default: LEGUP_F_pad_BB__18_44
state: LEGUP_F_pad_BB__18_44
   Transition: default: LEGUP_F_pad_BB__18_45
state: LEGUP_F_pad_BB__18_45
   ret i32 %34
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 4
Basic Block: %7 Num States: 1
Basic Block: %9 Num States: 2
Basic Block: %13 Num States: 1
Basic Block: %16 Num States: 2
Basic Block: %17 Num States: 1
Basic Block: %18 Num States: 33
End Function: pad
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 1.000000e+01ns
Start Function: outerloop
state: LEGUP_0
   Transition: if (start): LEGUP_F_outerloop_BB__0_1 default: LEGUP_0
state: LEGUP_F_outerloop_BB__0_1
   %W = alloca [64 x i32], align 4 (endState: LEGUP_F_outerloop_BB__0_1)
   %1 = icmp sgt i32 %numBlocks, 0 (endState: LEGUP_F_outerloop_BB__0_1)
   %smax = select i1 %1, i32 %numBlocks, i32 0 (endState: LEGUP_F_outerloop_BB__0_1)
   br label %2
   Transition: default: LEGUP_F_outerloop_BB__2_2
state: LEGUP_F_outerloop_BB__2_2
   %h7.0 = phi i32 [ 1541459225, %0 ], [ %114, %113 ] (endState: LEGUP_F_outerloop_BB__2_2)
   %h6.0 = phi i32 [ 528734635, %0 ], [ %115, %113 ] (endState: LEGUP_F_outerloop_BB__2_2)
   %h5.0 = phi i32 [ -1694144372, %0 ], [ %116, %113 ] (endState: LEGUP_F_outerloop_BB__2_2)
   %h4.0 = phi i32 [ 1359893119, %0 ], [ %117, %113 ] (endState: LEGUP_F_outerloop_BB__2_2)
   %h3.0 = phi i32 [ -1521486534, %0 ], [ %118, %113 ] (endState: LEGUP_F_outerloop_BB__2_2)
   %h2.0 = phi i32 [ 1013904242, %0 ], [ %119, %113 ] (endState: LEGUP_F_outerloop_BB__2_2)
   %h1.0 = phi i32 [ -1150833019, %0 ], [ %120, %113 ] (endState: LEGUP_F_outerloop_BB__2_2)
   %h0.0 = phi i32 [ 1779033703, %0 ], [ %121, %113 ] (endState: LEGUP_F_outerloop_BB__2_2)
   %3 = phi i32 [ 0, %0 ], [ %122, %113 ] (endState: LEGUP_F_outerloop_BB__2_2)
   %4 = shl i32 %3, 6 (endState: LEGUP_F_outerloop_BB__2_2)
   %5 = or i32 %4, 1 (endState: LEGUP_F_outerloop_BB__2_2)
   %6 = or i32 %4, 2 (endState: LEGUP_F_outerloop_BB__2_2)
   %7 = or i32 %4, 3 (endState: LEGUP_F_outerloop_BB__2_2)
   %exitcond14 = icmp eq i32 %3, %smax (endState: LEGUP_F_outerloop_BB__2_2)
   br i1 %exitcond14, label %123, label %8
   Transition: if (%exitcond14): LEGUP_F_outerloop_BB__123_30 default: LEGUP_F_outerloop_BB__8_3
state: LEGUP_F_outerloop_BB__8_3
   br label %9
   Transition: default: LEGUP_F_outerloop_BB__9_4
state: LEGUP_F_outerloop_BB__9_4
   %10 = phi i32 [ 0, %8 ], [ %32, %31 ] (endState: LEGUP_F_outerloop_BB__9_4)
   %11 = shl i32 %10, 2 (endState: LEGUP_F_outerloop_BB__9_4)
   %exitcond = icmp eq i32 %10, 16 (endState: LEGUP_F_outerloop_BB__9_4)
   br i1 %exitcond, label %33, label %12
   Transition: if (%exitcond): LEGUP_F_outerloop_BB__33_12 default: LEGUP_F_outerloop_BB__12_5
state: LEGUP_F_outerloop_BB__12_5
   %scevgep = getelementptr [64 x i32]* %W, i32 0, i32 %10 (endState: LEGUP_F_outerloop_BB__12_5)
   %13 = add i32 %7, %11 (endState: LEGUP_F_outerloop_BB__12_5)
   %14 = add i32 %6, %11 (endState: LEGUP_F_outerloop_BB__12_5)
   %15 = add i32 %5, %11 (endState: LEGUP_F_outerloop_BB__12_5)
   %16 = add i32 %4, %11 (endState: LEGUP_F_outerloop_BB__12_5)
   Transition: default: LEGUP_F_outerloop_BB__12_6
state: LEGUP_F_outerloop_BB__12_6
   %scevgep1 = getelementptr i8* %data, i32 %13 (endState: LEGUP_F_outerloop_BB__12_6)
   %scevgep2 = getelementptr i8* %data, i32 %14 (endState: LEGUP_F_outerloop_BB__12_6)
   %scevgep3 = getelementptr i8* %data, i32 %15 (endState: LEGUP_F_outerloop_BB__12_6)
   %scevgep4 = getelementptr i8* %data, i32 %16 (endState: LEGUP_F_outerloop_BB__12_6)
   %17 = load i8* %scevgep4, align 1 (endState: LEGUP_F_outerloop_BB__12_8)
   %20 = load i8* %scevgep3, align 1 (endState: LEGUP_F_outerloop_BB__12_8)
   Transition: default: LEGUP_F_outerloop_BB__12_7
state: LEGUP_F_outerloop_BB__12_7
   %24 = load i8* %scevgep2, align 1 (endState: LEGUP_F_outerloop_BB__12_9)
   %28 = load i8* %scevgep1, align 1 (endState: LEGUP_F_outerloop_BB__12_9)
   Transition: default: LEGUP_F_outerloop_BB__12_8
state: LEGUP_F_outerloop_BB__12_8
   %18 = zext i8 %17 to i32 (endState: LEGUP_F_outerloop_BB__12_8)
   %19 = shl nuw i32 %18, 24 (endState: LEGUP_F_outerloop_BB__12_8)
   %21 = zext i8 %20 to i32 (endState: LEGUP_F_outerloop_BB__12_8)
   %22 = shl nuw nsw i32 %21, 16 (endState: LEGUP_F_outerloop_BB__12_8)
   %23 = or i32 %19, %22 (endState: LEGUP_F_outerloop_BB__12_8)
   Transition: default: LEGUP_F_outerloop_BB__12_9
state: LEGUP_F_outerloop_BB__12_9
   %25 = zext i8 %24 to i32 (endState: LEGUP_F_outerloop_BB__12_9)
   %26 = shl nuw nsw i32 %25, 8 (endState: LEGUP_F_outerloop_BB__12_9)
   %27 = or i32 %23, %26 (endState: LEGUP_F_outerloop_BB__12_9)
   %29 = zext i8 %28 to i32 (endState: LEGUP_F_outerloop_BB__12_9)
   %30 = or i32 %27, %29 (endState: LEGUP_F_outerloop_BB__12_9)
   store i32 %30, i32* %scevgep, align 4 (endState: LEGUP_F_outerloop_BB__12_10)
   Transition: default: LEGUP_F_outerloop_BB__12_10
state: LEGUP_F_outerloop_BB__12_10
   br label %31
   Transition: default: LEGUP_F_outerloop_BB__31_11
state: LEGUP_F_outerloop_BB__31_11
   %32 = add nsw i32 %10, 1 (endState: LEGUP_F_outerloop_BB__31_11)
   br label %9
   Transition: default: LEGUP_F_outerloop_BB__9_4
state: LEGUP_F_outerloop_BB__33_12
   br label %34
   Transition: default: LEGUP_F_outerloop_BB__34_13
state: LEGUP_F_outerloop_BB__34_13
   %indvar = phi i32 [ %indvar.next, %66 ], [ 0, %33 ] (endState: LEGUP_F_outerloop_BB__34_13)
   %35 = add i32 %indvar, 1 (endState: LEGUP_F_outerloop_BB__34_13)
   %36 = add i32 %indvar, 14 (endState: LEGUP_F_outerloop_BB__34_13)
   %exitcond5 = icmp eq i32 %indvar, 48 (endState: LEGUP_F_outerloop_BB__34_13)
   Transition: default: LEGUP_F_outerloop_BB__34_14
state: LEGUP_F_outerloop_BB__34_14
   %scevgep8 = getelementptr [64 x i32]* %W, i32 0, i32 %35 (endState: LEGUP_F_outerloop_BB__34_14)
   %scevgep10 = getelementptr [64 x i32]* %W, i32 0, i32 %36 (endState: LEGUP_F_outerloop_BB__34_14)
   br i1 %exitcond5, label %67, label %37
   Transition: if (%exitcond5): LEGUP_F_outerloop_BB__67_22 default: LEGUP_F_outerloop_BB__37_15
state: LEGUP_F_outerloop_BB__37_15
   %38 = add i32 %indvar, 9 (endState: LEGUP_F_outerloop_BB__37_15)
   %scevgep7 = getelementptr [64 x i32]* %W, i32 0, i32 %indvar (endState: LEGUP_F_outerloop_BB__37_15)
   %t.1 = add i32 %indvar, 16 (endState: LEGUP_F_outerloop_BB__37_15)
   %39 = load i32* %scevgep10, align 4 (endState: LEGUP_F_outerloop_BB__37_17)
   %47 = load i32* %scevgep10, align 4 (endState: LEGUP_F_outerloop_BB__37_17)
   Transition: default: LEGUP_F_outerloop_BB__37_16
state: LEGUP_F_outerloop_BB__37_16
   %scevgep9 = getelementptr [64 x i32]* %W, i32 0, i32 %38 (endState: LEGUP_F_outerloop_BB__37_16)
   %scevgep6 = getelementptr [64 x i32]* %W, i32 0, i32 %t.1 (endState: LEGUP_F_outerloop_BB__37_16)
   %52 = load i32* %scevgep8, align 4 (endState: LEGUP_F_outerloop_BB__37_18)
   %60 = load i32* %scevgep8, align 4 (endState: LEGUP_F_outerloop_BB__37_18)
   Transition: default: LEGUP_F_outerloop_BB__37_17
state: LEGUP_F_outerloop_BB__37_17
   %40 = lshr i32 %39, 17 (endState: LEGUP_F_outerloop_BB__37_17)
   %41 = shl i32 %39, 15 (endState: LEGUP_F_outerloop_BB__37_17)
   %42 = or i32 %40, %41 (endState: LEGUP_F_outerloop_BB__37_17)
   %43 = lshr i32 %39, 19 (endState: LEGUP_F_outerloop_BB__37_17)
   %44 = shl i32 %39, 13 (endState: LEGUP_F_outerloop_BB__37_17)
   %45 = or i32 %43, %44 (endState: LEGUP_F_outerloop_BB__37_17)
   %46 = xor i32 %42, %45 (endState: LEGUP_F_outerloop_BB__37_17)
   %48 = lshr i32 %47, 10 (endState: LEGUP_F_outerloop_BB__37_17)
   %49 = xor i32 %46, %48 (endState: LEGUP_F_outerloop_BB__37_17)
   %50 = load i32* %scevgep9, align 4 (endState: LEGUP_F_outerloop_BB__37_19)
   %64 = load i32* %scevgep7, align 4 (endState: LEGUP_F_outerloop_BB__37_19)
   Transition: default: LEGUP_F_outerloop_BB__37_18
state: LEGUP_F_outerloop_BB__37_18
   %53 = lshr i32 %52, 7 (endState: LEGUP_F_outerloop_BB__37_18)
   %54 = shl i32 %52, 25 (endState: LEGUP_F_outerloop_BB__37_18)
   %55 = or i32 %53, %54 (endState: LEGUP_F_outerloop_BB__37_18)
   %56 = lshr i32 %52, 18 (endState: LEGUP_F_outerloop_BB__37_18)
   %57 = shl i32 %52, 14 (endState: LEGUP_F_outerloop_BB__37_18)
   %58 = or i32 %56, %57 (endState: LEGUP_F_outerloop_BB__37_18)
   %59 = xor i32 %55, %58 (endState: LEGUP_F_outerloop_BB__37_18)
   %61 = lshr i32 %60, 3 (endState: LEGUP_F_outerloop_BB__37_18)
   %62 = xor i32 %59, %61 (endState: LEGUP_F_outerloop_BB__37_18)
   Transition: default: LEGUP_F_outerloop_BB__37_19
state: LEGUP_F_outerloop_BB__37_19
   %51 = add i32 %49, %50 (endState: LEGUP_F_outerloop_BB__37_19)
   %63 = add i32 %51, %62 (endState: LEGUP_F_outerloop_BB__37_19)
   %65 = add i32 %63, %64 (endState: LEGUP_F_outerloop_BB__37_19)
   store i32 %65, i32* %scevgep6, align 4 (endState: LEGUP_F_outerloop_BB__37_20)
   Transition: default: LEGUP_F_outerloop_BB__37_20
state: LEGUP_F_outerloop_BB__37_20
   br label %66
   Transition: default: LEGUP_F_outerloop_BB__66_21
state: LEGUP_F_outerloop_BB__66_21
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_outerloop_BB__66_21)
   br label %34
   Transition: default: LEGUP_F_outerloop_BB__34_13
state: LEGUP_F_outerloop_BB__67_22
   br label %68
   Transition: default: LEGUP_F_outerloop_BB__68_23
state: LEGUP_F_outerloop_BB__68_23
   %h.0 = phi i32 [ %h7.0, %67 ], [ %g.0, %92 ] (endState: LEGUP_F_outerloop_BB__68_23)
   %g.0 = phi i32 [ %h6.0, %67 ], [ %f.0, %92 ] (endState: LEGUP_F_outerloop_BB__68_23)
   %f.0 = phi i32 [ %h5.0, %67 ], [ %e.0, %92 ] (endState: LEGUP_F_outerloop_BB__68_23)
   %e.0 = phi i32 [ %h4.0, %67 ], [ %110, %92 ] (endState: LEGUP_F_outerloop_BB__68_23)
   %d.0 = phi i32 [ %h3.0, %67 ], [ %c.0, %92 ] (endState: LEGUP_F_outerloop_BB__68_23)
   %c.0 = phi i32 [ %h2.0, %67 ], [ %b.0, %92 ] (endState: LEGUP_F_outerloop_BB__68_23)
   %b.0 = phi i32 [ %h1.0, %67 ], [ %a.0, %92 ] (endState: LEGUP_F_outerloop_BB__68_23)
   %a.0 = phi i32 [ %h0.0, %67 ], [ %109, %92 ] (endState: LEGUP_F_outerloop_BB__68_23)
   %69 = phi i32 [ 0, %67 ], [ %111, %92 ] (endState: LEGUP_F_outerloop_BB__68_23)
   %exitcond11 = icmp eq i32 %69, 64 (endState: LEGUP_F_outerloop_BB__68_23)
   br i1 %exitcond11, label %112, label %70
   Transition: if (%exitcond11): LEGUP_F_outerloop_BB__112_28 default: LEGUP_F_outerloop_BB__70_24
state: LEGUP_F_outerloop_BB__70_24
   %scevgep13 = getelementptr [64 x i32]* @k, i32 0, i32 %69 (endState: LEGUP_F_outerloop_BB__70_24)
   %scevgep12 = getelementptr [64 x i32]* %W, i32 0, i32 %69 (endState: LEGUP_F_outerloop_BB__70_24)
   %71 = lshr i32 %e.0, 6 (endState: LEGUP_F_outerloop_BB__70_24)
   %72 = shl i32 %e.0, 26 (endState: LEGUP_F_outerloop_BB__70_24)
   %73 = or i32 %71, %72 (endState: LEGUP_F_outerloop_BB__70_24)
   %74 = lshr i32 %e.0, 11 (endState: LEGUP_F_outerloop_BB__70_24)
   %75 = shl i32 %e.0, 21 (endState: LEGUP_F_outerloop_BB__70_24)
   %76 = or i32 %74, %75 (endState: LEGUP_F_outerloop_BB__70_24)
   %77 = xor i32 %73, %76 (endState: LEGUP_F_outerloop_BB__70_24)
   %78 = lshr i32 %e.0, 25 (endState: LEGUP_F_outerloop_BB__70_24)
   %79 = shl i32 %e.0, 7 (endState: LEGUP_F_outerloop_BB__70_24)
   %80 = or i32 %78, %79 (endState: LEGUP_F_outerloop_BB__70_24)
   %81 = xor i32 %77, %80 (endState: LEGUP_F_outerloop_BB__70_24)
   %82 = add i32 %h.0, %81 (endState: LEGUP_F_outerloop_BB__70_24)
   %83 = and i32 %e.0, %f.0 (endState: LEGUP_F_outerloop_BB__70_24)
   %84 = xor i32 %e.0, -1 (endState: LEGUP_F_outerloop_BB__70_24)
   %85 = and i32 %g.0, %84 (endState: LEGUP_F_outerloop_BB__70_24)
   %86 = xor i32 %83, %85 (endState: LEGUP_F_outerloop_BB__70_24)
   %87 = add i32 %82, %86 (endState: LEGUP_F_outerloop_BB__70_24)
   %88 = load i32* %scevgep13, align 4 (endState: LEGUP_F_outerloop_BB__70_26)
   %90 = load i32* %scevgep12, align 4 (endState: LEGUP_F_outerloop_BB__70_26)
   Transition: default: LEGUP_F_outerloop_BB__70_25
state: LEGUP_F_outerloop_BB__70_25
   Transition: default: LEGUP_F_outerloop_BB__70_26
state: LEGUP_F_outerloop_BB__70_26
   %89 = add i32 %87, %88 (endState: LEGUP_F_outerloop_BB__70_26)
   %91 = add i32 %89, %90 (endState: LEGUP_F_outerloop_BB__70_26)
   br label %92
   Transition: default: LEGUP_F_outerloop_BB__92_27
state: LEGUP_F_outerloop_BB__92_27
   %93 = lshr i32 %a.0, 2 (endState: LEGUP_F_outerloop_BB__92_27)
   %94 = shl i32 %a.0, 30 (endState: LEGUP_F_outerloop_BB__92_27)
   %95 = or i32 %93, %94 (endState: LEGUP_F_outerloop_BB__92_27)
   %96 = lshr i32 %a.0, 13 (endState: LEGUP_F_outerloop_BB__92_27)
   %97 = shl i32 %a.0, 19 (endState: LEGUP_F_outerloop_BB__92_27)
   %98 = or i32 %96, %97 (endState: LEGUP_F_outerloop_BB__92_27)
   %99 = xor i32 %95, %98 (endState: LEGUP_F_outerloop_BB__92_27)
   %100 = lshr i32 %a.0, 22 (endState: LEGUP_F_outerloop_BB__92_27)
   %101 = shl i32 %a.0, 10 (endState: LEGUP_F_outerloop_BB__92_27)
   %102 = or i32 %100, %101 (endState: LEGUP_F_outerloop_BB__92_27)
   %103 = xor i32 %99, %102 (endState: LEGUP_F_outerloop_BB__92_27)
   %104 = xor i32 %b.0, %c.0 (endState: LEGUP_F_outerloop_BB__92_27)
   %105 = and i32 %a.0, %104 (endState: LEGUP_F_outerloop_BB__92_27)
   %106 = and i32 %b.0, %c.0 (endState: LEGUP_F_outerloop_BB__92_27)
   %107 = xor i32 %105, %106 (endState: LEGUP_F_outerloop_BB__92_27)
   %108 = add i32 %103, %107 (endState: LEGUP_F_outerloop_BB__92_27)
   %109 = add i32 %91, %108 (endState: LEGUP_F_outerloop_BB__92_27)
   %110 = add i32 %d.0, %91 (endState: LEGUP_F_outerloop_BB__92_27)
   %111 = add nsw i32 %69, 1 (endState: LEGUP_F_outerloop_BB__92_27)
   br label %68
   Transition: default: LEGUP_F_outerloop_BB__68_23
state: LEGUP_F_outerloop_BB__112_28
   br label %113
   Transition: default: LEGUP_F_outerloop_BB__113_29
state: LEGUP_F_outerloop_BB__113_29
   %114 = add i32 %h.0, %h7.0 (endState: LEGUP_F_outerloop_BB__113_29)
   %115 = add i32 %g.0, %h6.0 (endState: LEGUP_F_outerloop_BB__113_29)
   %116 = add i32 %f.0, %h5.0 (endState: LEGUP_F_outerloop_BB__113_29)
   %117 = add i32 %e.0, %h4.0 (endState: LEGUP_F_outerloop_BB__113_29)
   %118 = add i32 %d.0, %h3.0 (endState: LEGUP_F_outerloop_BB__113_29)
   %119 = add i32 %c.0, %h2.0 (endState: LEGUP_F_outerloop_BB__113_29)
   %120 = add i32 %b.0, %h1.0 (endState: LEGUP_F_outerloop_BB__113_29)
   %121 = add i32 %a.0, %h0.0 (endState: LEGUP_F_outerloop_BB__113_29)
   %122 = add nsw i32 %3, 1 (endState: LEGUP_F_outerloop_BB__113_29)
   br label %2
   Transition: default: LEGUP_F_outerloop_BB__2_2
state: LEGUP_F_outerloop_BB__123_30
   store i32 %h0.0, i32* %digest, align 4 (endState: LEGUP_F_outerloop_BB__123_31)
   %124 = getelementptr inbounds i32* %digest, i32 1 (endState: LEGUP_F_outerloop_BB__123_30)
   store i32 %h1.0, i32* %124, align 4 (endState: LEGUP_F_outerloop_BB__123_31)
   %125 = getelementptr inbounds i32* %digest, i32 2 (endState: LEGUP_F_outerloop_BB__123_30)
   %126 = getelementptr inbounds i32* %digest, i32 3 (endState: LEGUP_F_outerloop_BB__123_30)
   %127 = getelementptr inbounds i32* %digest, i32 4 (endState: LEGUP_F_outerloop_BB__123_30)
   %128 = getelementptr inbounds i32* %digest, i32 5 (endState: LEGUP_F_outerloop_BB__123_30)
   %129 = getelementptr inbounds i32* %digest, i32 6 (endState: LEGUP_F_outerloop_BB__123_30)
   %130 = getelementptr inbounds i32* %digest, i32 7 (endState: LEGUP_F_outerloop_BB__123_30)
   Transition: default: LEGUP_F_outerloop_BB__123_31
state: LEGUP_F_outerloop_BB__123_31
   store i32 %h2.0, i32* %125, align 4 (endState: LEGUP_F_outerloop_BB__123_32)
   store i32 %h3.0, i32* %126, align 4 (endState: LEGUP_F_outerloop_BB__123_32)
   Transition: default: LEGUP_F_outerloop_BB__123_32
state: LEGUP_F_outerloop_BB__123_32
   store i32 %h4.0, i32* %127, align 4 (endState: LEGUP_F_outerloop_BB__123_33)
   store i32 %h5.0, i32* %128, align 4 (endState: LEGUP_F_outerloop_BB__123_33)
   Transition: default: LEGUP_F_outerloop_BB__123_33
state: LEGUP_F_outerloop_BB__123_33
   store i32 %h6.0, i32* %129, align 4 (endState: LEGUP_F_outerloop_BB__123_34)
   store i32 %h7.0, i32* %130, align 4 (endState: LEGUP_F_outerloop_BB__123_34)
   Transition: default: LEGUP_F_outerloop_BB__123_34
state: LEGUP_F_outerloop_BB__123_34
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %12 Num States: 6
Basic Block: %31 Num States: 1
Basic Block: %33 Num States: 1
Basic Block: %34 Num States: 2
Basic Block: %37 Num States: 6
Basic Block: %66 Num States: 1
Basic Block: %67 Num States: 1
Basic Block: %68 Num States: 1
Basic Block: %70 Num States: 3
Basic Block: %92 Num States: 1
Basic Block: %112 Num States: 1
Basic Block: %113 Num States: 1
Basic Block: %123 Num States: 5
End Function: outerloop
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 1.000000e+01ns
Start Function: SHA256
state: LEGUP_0
   Transition: if (start): LEGUP_F_SHA256_BB__0_1 default: LEGUP_0
state: LEGUP_F_SHA256_BB__0_1
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   %1 = call i32 @pad(i8* getelementptr inbounds ([192 x i8]* @gData, i32 0, i32 0), i8* %msg, i64 %msgLen) #2 (endState: LEGUP_function_call_2)
   Transition: if (pad_finish_final): LEGUP_F_SHA256_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_SHA256_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @outerloop(i32* getelementptr inbounds ([8 x i32]* @gDigest, i32 0, i32 0), i8* getelementptr inbounds ([192 x i8]* @gData, i32 0, i32 0), i32 %1) #2 (endState: LEGUP_function_call_4)
   Transition: if (outerloop_finish_final): LEGUP_F_SHA256_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_SHA256_BB__0_5
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 5
End Function: SHA256
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 1.000000e+01ns
Start Function: legup_memcpy_1
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_1_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_1_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_1)
   %dt = alloca i8*, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_1)
   %st = alloca i8*, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_2)
   store i8* %d, i8** %dt, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_2)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__0_2
state: LEGUP_F_legup_memcpy_1_BB__0_2
   store i8* %s, i8** %st, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__0_3
state: LEGUP_F_legup_memcpy_1_BB__0_3
   br label %2
   Transition: default: LEGUP_F_legup_memcpy_1_BB__2_4
state: LEGUP_F_legup_memcpy_1_BB__2_4
   %3 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__2_6)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__2_5
state: LEGUP_F_legup_memcpy_1_BB__2_5
   Transition: default: LEGUP_F_legup_memcpy_1_BB__2_6
state: LEGUP_F_legup_memcpy_1_BB__2_6
   %4 = add i32 %3, -1 (endState: LEGUP_F_legup_memcpy_1_BB__2_6)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__2_7)
   %5 = icmp eq i32 %3, 0 (endState: LEGUP_F_legup_memcpy_1_BB__2_6)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__2_7
state: LEGUP_F_legup_memcpy_1_BB__2_7
   br i1 %5, label %12, label %6
   Transition: if (%5): LEGUP_F_legup_memcpy_1_BB__12_14 default: LEGUP_F_legup_memcpy_1_BB__6_8
state: LEGUP_F_legup_memcpy_1_BB__6_8
   %7 = load i8** %st, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__6_10)
   %10 = load i8** %dt, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__6_10)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__6_9
state: LEGUP_F_legup_memcpy_1_BB__6_9
   Transition: default: LEGUP_F_legup_memcpy_1_BB__6_10
state: LEGUP_F_legup_memcpy_1_BB__6_10
   %8 = getelementptr inbounds i8* %7, i32 1 (endState: LEGUP_F_legup_memcpy_1_BB__6_10)
   store i8* %8, i8** %st, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__6_11)
   %9 = load i8* %7, align 1 (endState: LEGUP_F_legup_memcpy_1_BB__6_12)
   %11 = getelementptr inbounds i8* %10, i32 1 (endState: LEGUP_F_legup_memcpy_1_BB__6_10)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__6_11
state: LEGUP_F_legup_memcpy_1_BB__6_11
   store i8* %11, i8** %dt, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__6_12)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__6_12
state: LEGUP_F_legup_memcpy_1_BB__6_12
   store i8 %9, i8* %10, align 1 (endState: LEGUP_F_legup_memcpy_1_BB__6_13)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__6_13
state: LEGUP_F_legup_memcpy_1_BB__6_13
   br label %2
   Transition: default: LEGUP_F_legup_memcpy_1_BB__2_4
state: LEGUP_F_legup_memcpy_1_BB__12_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %2 Num States: 4
Basic Block: %6 Num States: 6
Basic Block: %12 Num States: 1
End Function: legup_memcpy_1
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 1.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   %msg = alloca [64 x i8], align 1 (endState: LEGUP_F_main_BB__0_1)
   %1 = getelementptr inbounds [64 x i8]* %msg, i32 0, i32 0 (endState: LEGUP_F_main_BB__0_1)
   %2 = getelementptr inbounds [64 x i8]* %msg, i32 0, i32 0 (endState: LEGUP_F_main_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @legup_memcpy_1(i8* %1, i8* getelementptr inbounds ([64 x i8]* @main.msg, i32 0, i32 0), i32 64) (endState: LEGUP_function_call_2)
   Transition: if (legup_memcpy_1_finish_final): LEGUP_F_main_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_main_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @SHA256(i8* %2, i64 64) #2 (endState: LEGUP_function_call_4)
   Transition: if (SHA256_finish_final): LEGUP_F_main_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_main_BB__0_5
   ret i32 0
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 5
End Function: main
--------------------------------------------------------------------------------

