//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Wed Dec  9 21:02:08 2015
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: SHA256
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: legup_memcpy_1
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: pad
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
signed_divide_32              1                             
--------------------------------------------------------------------------------
Function: outerloop
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: pad
State: LEGUP_F_pad_BB__3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  %5 = load i8* %4, align 1 (idx: 0)              10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  %5 = load i8* %4, align 1 (idx: 0)              1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %5 = load i8* %4, align 1 (idx: 0) -> pad_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_pad_BB__3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  store i8 %5, i8* %6, align 1 (idx: 0)           21                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  store i8 %5, i8* %6, align 1 (idx: 0)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %5, i8* %6, align 1 (idx: 0) -> pad_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_pad_BB__9
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 -128, i8* %11, alig... can share an output register with another operation already assigned to pad_mem_dual_port_0
  store i8 -128, i8* %11, alig... can share an output register with another operation already assigned to pad_mem_dual_port_1
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  store i8 -128, i8* %11, alig... (idx: 0)        6                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  store i8 -128, i8* %11, alig... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 -128, i8* %11, alig... (idx: 0) -> pad_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_pad_BB__16
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 0, i8* %scevgep, al... can share an output register with another operation already assigned to pad_mem_dual_port_0
  store i8 0, i8* %scevgep, al... can share an output register with another operation already assigned to pad_mem_dual_port_1
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  store i8 0, i8* %scevgep, al... (idx: 0)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  store i8 0, i8* %scevgep, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 0, i8* %scevgep, al... (idx: 0) -> pad_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_pad_BB__18
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  pad_signed_divide_32_0        
  %34 = sdiv i32 %i.1.in, 64 (idx: 0)             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  pad_signed_divide_32_0        
  %34 = sdiv i32 %i.1.in, 64 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = sdiv i32 %i.1.in, 64 (idx: 0) -> pad_signed_divide_32_0 (mux inputs: 1)
State: LEGUP_F_pad_BB__18
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %21, i8* %23, align... can share an output register with another operation already assigned to pad_mem_dual_port_0
  store i8 %21, i8* %23, align... can share an output register with another operation already assigned to pad_mem_dual_port_1
  store i8 %25, i8* %27, align... can share an output register with another operation already assigned to pad_mem_dual_port_0
  store i8 %25, i8* %27, align... can share an output register with another operation already assigned to pad_mem_dual_port_1
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  store i8 %21, i8* %23, align... (idx: 0)        18                            17                            
  store i8 %25, i8* %27, align... (idx: 1)        18                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  store i8 %21, i8* %23, align... (idx: 0)        1                             0                             
  store i8 %25, i8* %27, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %21, i8* %23, align... (idx: 0) -> pad_mem_dual_port_0 (mux inputs: 5)
  store i8 %25, i8* %27, align... (idx: 1) -> pad_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_pad_BB__18
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %29, i8* %31, align... can share an output register with another operation already assigned to pad_mem_dual_port_0
  store i8 %29, i8* %31, align... can share an output register with another operation already assigned to pad_mem_dual_port_1
  store i8 %32, i8* %33, align... can share an output register with another operation already assigned to pad_mem_dual_port_0
  store i8 %32, i8* %33, align... can share an output register with another operation already assigned to pad_mem_dual_port_1
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  store i8 %29, i8* %31, align... (idx: 0)        20                            19                            
  store i8 %32, i8* %33, align... (idx: 1)        20                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  pad_mem_dual_port_0           pad_mem_dual_port_1           
  store i8 %29, i8* %31, align... (idx: 0)        1                             0                             
  store i8 %32, i8* %33, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %29, i8* %31, align... (idx: 0) -> pad_mem_dual_port_0 (mux inputs: 7)
  store i8 %32, i8* %33, align... (idx: 1) -> pad_mem_dual_port_1 (mux inputs: 6)

Running Bipartite Weighted Matching on function: outerloop
State: LEGUP_F_outerloop_BB__12
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %17 = load i8* %scevgep4, al... (idx: 0)        10                            10                            
  %20 = load i8* %scevgep3, al... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %17 = load i8* %scevgep4, al... (idx: 0)        1                             0                             
  %20 = load i8* %scevgep3, al... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = load i8* %scevgep4, al... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 1)
  %20 = load i8* %scevgep3, al... (idx: 1) -> outerloop_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_outerloop_BB__12
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %24 = load i8* %scevgep2, al... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  %24 = load i8* %scevgep2, al... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
  %28 = load i8* %scevgep1, al... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  %28 = load i8* %scevgep1, al... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %24 = load i8* %scevgep2, al... (idx: 0)        6                             6                             
  %28 = load i8* %scevgep1, al... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %24 = load i8* %scevgep2, al... (idx: 0)        1                             0                             
  %28 = load i8* %scevgep1, al... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = load i8* %scevgep2, al... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 2)
  %28 = load i8* %scevgep1, al... (idx: 1) -> outerloop_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_outerloop_BB__12
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %30, i32* %scevgep... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  store i32 %30, i32* %scevgep... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %30, i32* %scevgep... (idx: 0)        17                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %30, i32* %scevgep... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %30, i32* %scevgep... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_outerloop_BB__37
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %39 = load i32* %scevgep10, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  %39 = load i32* %scevgep10, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
  %47 = load i32* %scevgep10, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  %47 = load i32* %scevgep10, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %39 = load i32* %scevgep10, ... (idx: 0)        9                             7                             
  %47 = load i32* %scevgep10, ... (idx: 1)        9                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %39 = load i32* %scevgep10, ... (idx: 0)        1                             0                             
  %47 = load i32* %scevgep10, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %39 = load i32* %scevgep10, ... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 5)
  %47 = load i32* %scevgep10, ... (idx: 1) -> outerloop_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_outerloop_BB__37
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %52 = load i32* %scevgep8, a... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  %52 = load i32* %scevgep8, a... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
  %60 = load i32* %scevgep8, a... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  %60 = load i32* %scevgep8, a... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %52 = load i32* %scevgep8, a... (idx: 0)        10                            8                             
  %60 = load i32* %scevgep8, a... (idx: 1)        10                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %52 = load i32* %scevgep8, a... (idx: 0)        1                             0                             
  %60 = load i32* %scevgep8, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %52 = load i32* %scevgep8, a... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 6)
  %60 = load i32* %scevgep8, a... (idx: 1) -> outerloop_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_outerloop_BB__37
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %50 = load i32* %scevgep9, a... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  %50 = load i32* %scevgep9, a... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
  %64 = load i32* %scevgep7, a... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  %64 = load i32* %scevgep7, a... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %50 = load i32* %scevgep9, a... (idx: 0)        11                            9                             
  %64 = load i32* %scevgep7, a... (idx: 1)        11                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %50 = load i32* %scevgep9, a... (idx: 0)        1                             0                             
  %64 = load i32* %scevgep7, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %50 = load i32* %scevgep9, a... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 7)
  %64 = load i32* %scevgep7, a... (idx: 1) -> outerloop_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_outerloop_BB__37
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %65, i32* %scevgep... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  store i32 %65, i32* %scevgep... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %65, i32* %scevgep... (idx: 0)        22                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %65, i32* %scevgep... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %65, i32* %scevgep... (idx: 0) -> outerloop_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_outerloop_BB__70
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %88 = load i32* %scevgep13, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  %88 = load i32* %scevgep13, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
  %90 = load i32* %scevgep12, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  %90 = load i32* %scevgep12, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %88 = load i32* %scevgep13, ... (idx: 0)        12                            12                            
  %90 = load i32* %scevgep12, ... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  %88 = load i32* %scevgep13, ... (idx: 0)        1                             0                             
  %90 = load i32* %scevgep12, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %88 = load i32* %scevgep13, ... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 8)
  %90 = load i32* %scevgep12, ... (idx: 1) -> outerloop_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_outerloop_BB__123
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %h0.0, i32* %diges... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  store i32 %h0.0, i32* %diges... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
  store i32 %h1.0, i32* %124, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  store i32 %h1.0, i32* %124, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %h0.0, i32* %diges... (idx: 0)        13                            13                            
  store i32 %h1.0, i32* %124, ... (idx: 1)        23                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %h0.0, i32* %diges... (idx: 0)        1                             0                             
  store i32 %h1.0, i32* %124, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %h0.0, i32* %diges... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 9)
  store i32 %h1.0, i32* %124, ... (idx: 1) -> outerloop_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_outerloop_BB__123
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %h2.0, i32* %125, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  store i32 %h2.0, i32* %125, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
  store i32 %h3.0, i32* %126, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  store i32 %h3.0, i32* %126, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %h2.0, i32* %125, ... (idx: 0)        24                            25                            
  store i32 %h3.0, i32* %126, ... (idx: 1)        24                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %h2.0, i32* %125, ... (idx: 0)        1                             0                             
  store i32 %h3.0, i32* %126, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %h2.0, i32* %125, ... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 11)
  store i32 %h3.0, i32* %126, ... (idx: 1) -> outerloop_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_outerloop_BB__123
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %h4.0, i32* %127, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  store i32 %h4.0, i32* %127, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
  store i32 %h5.0, i32* %128, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  store i32 %h5.0, i32* %128, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %h4.0, i32* %127, ... (idx: 0)        26                            27                            
  store i32 %h5.0, i32* %128, ... (idx: 1)        26                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %h4.0, i32* %127, ... (idx: 0)        1                             0                             
  store i32 %h5.0, i32* %128, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %h4.0, i32* %127, ... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 13)
  store i32 %h5.0, i32* %128, ... (idx: 1) -> outerloop_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_outerloop_BB__123
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %h6.0, i32* %129, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  store i32 %h6.0, i32* %129, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
  store i32 %h7.0, i32* %130, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_0
  store i32 %h7.0, i32* %130, ... can share an output register with another operation already assigned to outerloop_mem_dual_port_1
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %h6.0, i32* %129, ... (idx: 0)        28                            29                            
  store i32 %h7.0, i32* %130, ... (idx: 1)        28                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  outerloop_mem_dual_port_0     outerloop_mem_dual_port_1     
  store i32 %h6.0, i32* %129, ... (idx: 0)        1                             0                             
  store i32 %h7.0, i32* %130, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %h6.0, i32* %129, ... (idx: 0) -> outerloop_mem_dual_port_0 (mux inputs: 15)
  store i32 %h7.0, i32* %130, ... (idx: 1) -> outerloop_mem_dual_port_1 (mux inputs: 16)

Running Bipartite Weighted Matching on function: SHA256

Running Bipartite Weighted Matching on function: legup_memcpy_1
State: LEGUP_F_legup_memcpy_1_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i32 %n, i32* %1, align... (idx: 0)        10                            10                            
  store i8* %d, i8** %dt, alig... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i32 %n, i32* %1, align... (idx: 0)        1                             0                             
  store i8* %d, i8** %dt, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %n, i32* %1, align... (idx: 0) -> legup_memcpy_1_mem_dual_port_0 (mux inputs: 1)
  store i8* %d, i8** %dt, alig... (idx: 1) -> legup_memcpy_1_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_legup_memcpy_1_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %s, i8** %st, alig... can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  store i8* %s, i8** %st, alig... can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_1
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i8* %s, i8** %st, alig... (idx: 0)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i8* %s, i8** %st, alig... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %s, i8** %st, alig... (idx: 0) -> legup_memcpy_1_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memcpy_1_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %3 = load i32* %1, align 4 can share an input with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  %3 = load i32* %1, align 4 can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  %3 = load i32* %1, align 4 can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_1
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  %3 = load i32* %1, align 4 (idx: 0)             -3                            6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  %3 = load i32* %1, align 4 (idx: 0)             1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %3 = load i32* %1, align 4 (idx: 0) -> legup_memcpy_1_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memcpy_1_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %4, i32* %1, align... can share an input with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  store i32 %4, i32* %1, align... can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  store i32 %4, i32* %1, align... can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_1
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i32 %4, i32* %1, align... (idx: 0)        7                             16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i32 %4, i32* %1, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %4, i32* %1, align... (idx: 0) -> legup_memcpy_1_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memcpy_1_BB__6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %7 = load i8** %st, align 4 can share an input with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  %7 = load i8** %st, align 4 can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  %7 = load i8** %st, align 4 can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_1
  %10 = load i8** %dt, align 4 can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  %10 = load i8** %dt, align 4 can share an input with another operation already assigned to legup_memcpy_1_mem_dual_port_1
  %10 = load i8** %dt, align 4 can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_1
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  %7 = load i8** %st, align 4 (idx: 0)            -2                            6                             
  %10 = load i8** %dt, align 4 (idx: 1)           8                             -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  %7 = load i8** %st, align 4 (idx: 0)            1                             0                             
  %10 = load i8** %dt, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %7 = load i8** %st, align 4 (idx: 0) -> legup_memcpy_1_mem_dual_port_0 (mux inputs: 3)
  %10 = load i8** %dt, align 4 (idx: 1) -> legup_memcpy_1_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_legup_memcpy_1_BB__6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %8, i8** %st, alig... can share an input with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  store i8* %8, i8** %st, alig... can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  store i8* %8, i8** %st, alig... can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_1
  %9 = load i8* %7, align 1 can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  %9 = load i8* %7, align 1 can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_1
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i8* %8, i8** %st, alig... (idx: 0)        8                             16                            
  %9 = load i8* %7, align 1 (idx: 1)              8                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i8* %8, i8** %st, alig... (idx: 0)        1                             0                             
  %9 = load i8* %7, align 1 (idx: 1)              0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %8, i8** %st, alig... (idx: 0) -> legup_memcpy_1_mem_dual_port_0 (mux inputs: 4)
  %9 = load i8* %7, align 1 (idx: 1) -> legup_memcpy_1_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_legup_memcpy_1_BB__6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %11, i8** %dt, ali... can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  store i8* %11, i8** %dt, ali... can share an input with another operation already assigned to legup_memcpy_1_mem_dual_port_1
  store i8* %11, i8** %dt, ali... can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_1
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i8* %11, i8** %dt, ali... (idx: 0)        19                            7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i8* %11, i8** %dt, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %11, i8** %dt, ali... (idx: 0) -> legup_memcpy_1_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_legup_memcpy_1_BB__6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %9, i8* %10, align ... can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_0
  store i8 %9, i8* %10, align ... can share an output register with another operation already assigned to legup_memcpy_1_mem_dual_port_1
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i8 %9, i8* %10, align ... (idx: 0)        19                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memcpy_1_mem_dual_port_0legup_memcpy_1_mem_dual_port_1
  store i8 %9, i8* %10, align ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %9, i8* %10, align ... (idx: 0) -> legup_memcpy_1_mem_dual_port_1 (mux inputs: 5)

Running Bipartite Weighted Matching on function: main

